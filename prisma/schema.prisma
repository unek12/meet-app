// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  username    String        @unique
  password    String
  name        String        @default("")
  avatar      String        @default("")
  refresh     String        @default("")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  meetings    Meeting[]
  Participant Participant[]
  Message     Message[]
}

model Meeting {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  date         DateTime      @default(now())
  location     String?
  organizer    User          @relation(fields: [organizerId], references: [id])
  organizerId  String        @db.ObjectId
  participants Participant[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  messages      Message[]
}

model Participant {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  meeting        Meeting  @relation(fields: [meetingId], references: [id])
  meetingId      String   @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @db.ObjectId
  socketId       String
  isVideoOn      Boolean
  isMicrophoneOn Boolean
  isPresent      Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String   @db.ObjectId
  meeting   Meeting  @relation(fields: [meetingId], references: [id])
  meetingId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
